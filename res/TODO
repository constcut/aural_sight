
0) nextLine, prevLine добавить
+ починить prev page

1) Полная панель + настройки панели,
    + 3 уровня панели?
    1) Рефакторинг view
    (Использовать канал только через TabView - чтобы была единая точка доступа к таблатуре и изменениям)

x) Многоуровневая настраиваемая панель - JSON с массивом объектов, где 2 массива, 1 это названия картинок, 2 это комманды
+ возможность пропуска

x) Связывание с клавиатурой

x) Функции меню\табы

    a) Перепроверить работу всех текущих комманд
    б) Переместить некоторые команды, такие как сохранения
    в) Удалить лишние комманды
    г) Заменить виджеты на диалоги из QML

_keyToTabCommandsMap = { //TODO move into config (и схожее тоже!)
    {"set till the end", TabCommand::SetSignTillEnd},
    {"save as",TabCommand::SaveAs},
    {"mute", TabCommand::Mute},
    {"solo", TabCommand::Solo},
    {">>>", TabCommand::MoveRight},
    {"<<<", TabCommand::MoveLeft},
    {"^^^", TabCommand::MoveUp},
    {"vvv", TabCommand::MoveDown},
    {"drums", TabCommand::Drums},
    {"instr", TabCommand::Instument},
    {"pan", TabCommand::Panoram},
    {"volume",TabCommand::Volume },
    {"name", TabCommand::Name},
    {"bpm", TabCommand::BPM},
    {"opentrack", TabCommand::OpenTrack},
    {"newTrack", TabCommand::NewTrack},
    {"deleteTrack", TabCommand::DeleteTrack},
    {CONF_PARAM("TrackView.playMidi"), TabCommand::PlayMidi}, //TODO перепроверить что они уже заданы
    {CONF_PARAM("TabView.genMidi"), TabCommand::GenerateMidi},
    {"spc",TabCommand::PlayMidi},
    {"p", TabCommand::PauseMidi},
    {"marker", TabCommand::AddMarker},
    {"|:", TabCommand::OpenReprise},
    {":|", TabCommand::CloseReprise},
    {"goToN", TabCommand::GotoBar},
    {"tune",  TabCommand::Tune}
};

_keyToTrackCommandsMap = {
    {"playFromStart", TrackCommand::PlayFromStart},
    {"gotoStart", TrackCommand::GotoStart},
    {"set for selected", TrackCommand::SetSignForSelected},
    {"select >", TrackCommand::SelectionExpandRight},
    {"select <", TrackCommand::SelectionExpandLeft},
    {"ins", TrackCommand::InsertBar},
    {CONF_PARAM("TrackView.nextBar"), TrackCommand::NextBar},
    {CONF_PARAM("TrackView.prevBar"), TrackCommand::PrevBar},
    {"prevPage", TrackCommand::PrevPage},
    {"nextPage", TrackCommand::NextPage},
    {"nextTrack", TrackCommand::NextTrack},
    {"prevTrack", TrackCommand::PrevTrack},
    {CONF_PARAM("TrackView.stringDown"), TrackCommand::StringDown},
    {CONF_PARAM("TrackView.stringUp"), TrackCommand::StringUp},
    {CONF_PARAM("TrackView.prevBeat"), TrackCommand::PrevBeat},
    {CONF_PARAM("TrackView.nextBeat"), TrackCommand::NextBeat},
    {CONF_PARAM("TrackView.setPause"), TrackCommand::SetPause},
    {"delete bar", TrackCommand::DeleteBar},
    {"delete selected bars", TrackCommand::DeleteSelectedBars},
    {"delete selected beats", TrackCommand::DeleteSelectedBeats},
    {CONF_PARAM("TrackView.deleteNote"), TrackCommand::DeleteNote},
    {CONF_PARAM("TrackView.increaceDuration"), TrackCommand::IncDuration},
    {CONF_PARAM("TrackView.decreaceDuration"), TrackCommand::DecDuration},
    {CONF_PARAM("TrackView.playMidi"), TrackCommand::PlayTrackMidi},
    {CONF_PARAM("TrackView.save"), TrackCommand::SaveFile},
    {"save as", TrackCommand::SaveAsFromTrack},
    {"newBar", TrackCommand::NewBar},
    {"dot", TrackCommand::SetDot},
    {"-3-",  TrackCommand::SetTriole},
    {"leeg", TrackCommand::Leeg},
    {"dead", TrackCommand::Dead},
    {CONF_PARAM("effects.vibrato"), TrackCommand::Vibrato },
    {CONF_PARAM("effects.slide"), TrackCommand::Slide },
    {CONF_PARAM("effects.hammer"), TrackCommand::Hammer},
    {CONF_PARAM("effects.letring"), TrackCommand::LetRing},
    {CONF_PARAM("effects.palmmute"), TrackCommand::PalmMute},
    {CONF_PARAM("effects.harmonics"), TrackCommand::Harmonics},
    {"trem", TrackCommand::TremoloPickings},
    {CONF_PARAM("effects.trill"), TrackCommand::Trill},
    {CONF_PARAM("effects.stokatto"), TrackCommand::Stokatto},
    {CONF_PARAM("effects.fadein"), TrackCommand::FadeIn},
    {CONF_PARAM("effects.accent"), TrackCommand::Accent},
    {"h acc", TrackCommand::HeaveAccent},
    {"bend", TrackCommand::Bend},
    {"chord", TrackCommand::Chord},
    {"text", TrackCommand::Text},
    {"changes", TrackCommand::Changes},
    {"upstroke", TrackCommand::UpStroke},
    {"downstroke", TrackCommand::DownStroke},
    {"signs", TrackCommand::SetBarSign},
    {"cut", TrackCommand::Cut},
    {"copy", TrackCommand::Copy},
    {"copyBeat", TrackCommand::CopyBeat},
    {"copyBars", TrackCommand::CopyBars},
    {"paste", TrackCommand::Paste},
    {"undo", TrackCommand::Undo}
};


+ QML enumerations (TabCommand, TrackCommand, Midi)
//Track Status etc


(QML models requests:

std::string instruments[]= {
    "Acoustic Grand Piano",
    "Bright Acoustic Piano",
    "Electric Grand Piano",
    "Honky-tonk Piano",
    "Rhodes Piano",
    "Chorused Piano",
    "Harpsichord",
    "Clavinet",
    "Celesta",
    "Glockenspiel",
    "Music Box",
    "Vibraphone",
    "Marimba",
    "Xylophone",
    "Tubular Bells",
    "Dulcimer",
    "Hammond Organ",
    "Percussive Organ",
    "Rock Organ",
    "Church Organ",
    "Reed Organ",
    "Accodion",
    "Hrmonica",
    "Tango Accodion",
    "Acoustic Guitar (nylon)",
    "Acoustic Guitar (steel)",
    "Electric Guitar (jazz)",
    "Electric Guitar (clean)",
    "Electric Guitar (muted)",
    "Overdriven Guitar",
    "Distortion Guitar",
    "Guitar Harmonics",
    "Acoustic Bass",
    "Electric Bass (finger)",
    "Electric Bass (pick)",
    "Fretless Bass",
    "Slap Bass 1",
    "Slap Bass 2",
    "Synth Bass 1",
    "Synth Bass 2",
    "Violin",
    "Viola",
    "Cello",
    "Contrabass",
    "Tremolo Strings",
    "Pizzicato Strings",
    "Orchestral Harp",
    "Timpani",
    "String Ensemble 1",
    "String Ensemble 2",
    "SynthStrings 1",
    "SynthStrings 2",
    "Choir Aahs",
    "Voice Oohs",
    "Synth Voice",
    "Orchetra Hit",
    "Trumpet",
    "Trombone",
    "Tuba",
    "Muted Trumpet",
    "French Horn",
    "Brass Section",
    "Synth Brass 1",
    "Synth Brass 2",
    "Soprano Sax",
    "Alto Sax",
    "Tenor Sax",
    "Baritone Sax",
    "Oboe",
    "English Horn",
    "Bassoon",
    "Clarinet",
    "Piccolo",
    "Flute",
    "Recorder",
    "Pan Flute",
    "Bottle Blow",
    "Shakuhachi",
    "Wistle",
    "Ocarina",
    "Lead 1 (square)",
    "Lead 2 (sawtooth)",
    "Lead 3 (caliope lead)",
    "Lead 4 (chiff lead)",
    "Lead 5 (charang)",
    "Lead 6 (voice)",
    "Lead 7 (hiths)",
    "Lead 8 (bass + lead)",
    "Pad 1 (new age)",
    "Pad 2 (warm)",
    "Pad 3 (polysynth)",
    "Pad 4 (choir)",
    "Pad 5 (bowed)",
    "Pad 6 (metalic)",
    "Pad 7 (halo)",
    "Pad 8 (sweep)",
    "FX 1 (rain)",
    "FX 2 (soundrack)",
    "FX 3 (crystl)",
    "FX 4 (atmosphere)",
    "FX 5 (brightness)",
    "FX 6 (goblins)",
    "FX 7 (echoes)",
    "FX 8 (sci-fi)",
    "Sitar",
    "Banjo",
    "Shamisen",
    "Koto",
    "Kalimba",
    "Bigpipe",
    "Fiddle",
    "Shanai",
    "Tinkle Bell",
    "Agogo",
    "Steel Drums",
    "Woodblock",
    "Taiko Drum",
    "Melodic Tom",
    "Synth Drum",
    "Reverce Cymbal",
    "Guitar Fret Noise",
    "Breath Noise",
    "Seashore",
    "Bird Tweet",
    "Telephone ring",
    "Helicopter",
    "Applause",
    "Gunshot"
};


std::string percussions[]=
{
    "27 - High Q",
    "28 - Slap",
    "29 - Scratch Push",
    "30 - Scratch Pull",
    "31 - Sticks",
    "32 - Square Click",
    "33 - Metronome Click",
    "34 - Metronome Bell",
    "35 - Acoustic Bass Drum",
    "36 - Bass Drum 1",
    "37 - Side Stick",
    "38 - Acostic Snare",
    "39 - Hand Clap",
    "40 - Electric Snare",
    "41 - Low Floor Tom",
    "42 - Closed Hi-Hat",
    "43 - High Floor Tom",
    "44 - Pedal Hi-Hat",
    "45 - Low Tom",
    "46 - Open Hi-Hat",
    "47 - Low-Mid Tom",
    "48 - High-Mid Tom",
    "49 - Crash Cymbal 1",
    "50 - High Tom",
    "51 - Ride Cymbal 1",
    "52 - Chinese Cymbal",
    "53- Ride Bell",
    "54 - Tambourine",
    "55 - Splash Cymbal",
    "56 - Cowbell",
    "57 - Crash Cymbal 2",
    "58 - Vibraslap",
    "59 - Ride Cymbal 2",
    "60 - High Bongo",
    "61 - Low Bongo",
    "62 - Mute High Conga",
    "63 - Open High Conga",
    "64 - Low Conga",
    "65 - High Timbale",
    "66 - Low Timbale",
    "67 - High Agogo",
    "68 - Low Agogo",
    "69 - Cabasa",
    "70 - Maracas",
    "71 - Short Whistle",
    "72 - Long Whistle",
    "73 - Short Guiro",
    "74 - Long Guiro",
    "75 - Claves",
    "76 - High Wood Block",
    "77 - Low  Wood Block",
    "78 - Mute Cuica",
    "79 - Open Cuica",
    "80 - Mute Triangle",
    "81 - Open Triangle",
    "82 - Shaker",
    "83 - Jingle Bell",
    "84 - Bell Tree",
    "85 - Castinets",
    "86 - Mute Surdo",
    "87 - Open Surdo"
};)


z) PDF экспорт
 : https://forum.qt.io/topic/68805/combine-multiple-images-into-a-single-pdf/8

--------------------------------------------------------------------------------

Old selection draws:

just after barview creation in trackview


int& selectionBeatFirst = _pTrack->selectBeatFirst();
int& selectionBeatLast = _pTrack->selectBeatLast();
int& selectionBarFirst = _pTrack->selectBarFirst();
int& selectionBarLast = _pTrack->selectBarLast();

if (selectionBarFirst!=-1)
{
    if ((i >= selectionBarFirst)&&
        (i <= selectionBarLast))
    {
        //if one - then same (first)
        //if last - then second (last)
        //if middle - -1(whole)
        if (selectionBarLast == selectionBarFirst)
            bView.setSelectors(selectionBeatFirst,selectionBeatLast);
        else
        {
            if (selectionBarFirst == i)
                bView.setSelectors(selectionBeatFirst, -1);
            else if (selectionBarLast == i)
                 bView.setSelectors(0,selectionBeatLast);
            else
                bView.setSelectors(0,-1); //in the middle
        }

    }
}

+ another reminder


----------------------------------------------------------------------------------

Ошибки в воспроизведении: есть смещение звука и анимации в illi!

Кажется ошибка в конце flower. До определенного момента все звучало в ритм анимации.

Не сработало ch в paper solders

Кажется одиночная реприза не обрабатывается (единичный такт)
(вероятно самая первая!) ни в анимации, ни в звуке

ссс -> 13 есть ошибка пропуска нескольких последних нот в анимации перед ускорением

+ Model size of -111 is less than 0

Repair tapper +
+++
idea -> tapper + piano roll

Android save to files on sdcard fails.. Permission?

+tapper midi silence hot fix

------------------------------------------------------------------------------------------
Поиск ритмических границ:

Использование stft или constant-Q:

Нужно использовать маленький шаг, 64 или 128 сэмплов, что соответствует 1.25 или 2.5 мс
Нужно использовать небольшой фрагмент аудиот 256 до 1024 сэмплов, что соответствует от 5 до 23.2 мс
Несколько экспериментов для проверки, но скорее всего лучше использовать окно заполненное нулями
Возможно следует использовать соотношение 1 к 2, но нужны эксперименты
Нужно попробовать заполнять нулями не только конец, но и размещать звук посередине

После этого нужно находить эпизоды паузы, all notes off, во многих случаях они обязанны быть,
И гарантированно будут наблюдаться при хлопках

Однако в случае неудачи нужно находить другой паттерн: общее возникновение частот + затухание верхних частот
Тогда концом ноты может быть повторное возникновение новых высоких частот

Так или иначе нужно делать трекинг каждой корзины и сохранять дистанции ненулевых амплитуд (или выше порога)

В худшем случае надо делать общий трекинг, сохраняя наличие ненулевых (или границы) на всем диапазоне

Возможно будут сложности с локализацией во времени, тк текущий вариант съехавший - нужно перепроверить это, и попробовать вначале исправить текущий вариант



------------------------------------------------------------------------------------
1) Piano roll + notes
    a) Midi
    b) Music XML
    c) Adjust bpm - не просто изменять, а адаптировать к новому, сохранив максимально звучание


--------------------------------------
CI + UI studio
----------------------------------------------------------------------------------------

1) Выделение библиотек в отдельный проект (статическая библиотека)
2) Вероятно выделение midi\tab поддиректорий в отдельный проект (статическая библиотека)
    (автотесты регрессии)

3) Перенос плейлистов в UI


==========================================================================================================
1) Отображение волны как просто набора сэмплов (переключение между режимом RMS или наложение другим цветом)
    a) Переключение режимов
    b) Zoom - как минимум *4 *2 *1 *1/2

2) Идея многоуровневого алгоритма поиска начала и конца сигнального элемента:
    a) Находить уровни гладкости RMS пока шероховатость не начнёт падать
    b) Находить рост за небольшое расстояние

    + Скользящее среднее

3) Cepstrum calculation, Qml page\component

4) Вкладки по типу athenum - возможность просмотра сразу нескольких одинаковых окон


X) Massive refactoring
    1) Sepparating all features from WaveShape\WaveContour\Spectrogram\ACgraph
    2) Common QML component for wave + something
    3) All libs as sepparated static library :
    https://stackoverflow.com/questions/10034825/how-do-i-build-a-static-library-and-executable-with-qt
    4) Spectrum, ACF, Ceptrum etc as QML component so we can make single page with all types

_____________________________________________________________________
Следующие шаги:
-----------------------------------------------------------------------

    1) Подвижные начало и конец определенной ноты, пороги громкости для удаления лишних пиков

    2) Нахождение частоты по заданному диапазону: скользящее окно yin \ fft \ yinPP

    3) Генерация миди

------------------------------------------------------------------------------
Компоненты и фитчи для удобства редактирования:

    1) Pattern Input для записи хлопков или настукивания
        : визуальное представление настукивания

    2) Piano roll для отображения Midi

    3) Редактирование Audio - вырезать, удалить, скопировать, вставить, отменить

______________________________________________________________________

------------------------------------------------------------
-------------------------------------------------------------
Отложенное:

Полифония\аккорды:

    1) eSACF 1, 2
        1:
        a) Warped linear prediction ?

        b1) highpass
        b2) half wave reclifier : clip 0 - 1
        b3) low pass 1k

        c) low pass 1k

        d) b + c into SACF:
            1) FFT like ACF + sum both into one
            2) pow 0.67 not 2
            3) IFFT
            4) Take real part (half of it)

        e) enchanged acf

            0) in the cycle from 2 to n_peaks = timescale
                1) clip to positive values
                2) timestretch to timescale ?
                3) substruct from original clipped signal
                4) clip again

            0:) So from original signal multiple times substructed different timestretched values + clipped


    2) primeF0 chord method

    3) Harmonic product spectrum

    4) Chromagramm / chroma feature class claculation


Воспроизведение:

    1) Проигрывание налету (генерация аудио в момент запроса от системы MidiSpeaker)

    2) Проигрывание из памяти (без сохранения на физический носитель)
------------------------------------------------------------------

Восстановление Qt-Android дебагера на свежей linux системе:
https://felgo.com/developers/forums/t/qtcreator-android-debugger

----------------------------

iOs:

https://stackoverflow.com/questions/35068054/does-app-store-accept-qt-app-linked-with-qt-library-lgplv3

https://news.ycombinator.com/item?id=4302517

https://marketplace.qt.io/products/qt-lgpl-app-template
https://github.com/dianiux-innova/qtlgplapptemplateExamples
