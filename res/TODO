==========================================================================================================

    1) piano roll

        1) Draw midi notes
            a) Объекты с координатами
            b) Hit \ select
            c) Press\release selected
            d) move on notes scale
            e) move on time scale
            f) check on simple midi (from 3.1 tab, add it to res)

        2) Move midi notes x + y : editing of MidiFile
        x) export form tab linked piano roll version: fret + string on each midi piano roll note

    2) Recoding on tab - выбираем несколько баров и записываем под них
        *изучить внимательно с android звуковой картой

    3) pattern line component

        1) 4/4 with different length for cell
        2) any num\denum
        3) different sizes (-3- -5- . ..)
        4) export to tab
        5) Mapping to pattern drumming (of existing drums)
        6) Tap under methronome

    4) static libs : first only libs folder, so we can just link it against build lib files

    5) realtime midi, and cental play\recod time to sync, +(animation time)

    6) Tracks view, additional mode, can create projects of 2 types, tab or atracks


    x) MidiEng sounds on editing for android (windows is fine)

    x) repaint TrackV on tab playing сменилось на false (чтобы избежать момента когда застыл финальный курсор проигрывания)

    X) Drum tab better loook -> image on every 38\40 midi note value for drums

-------------------------------------------------------
Unfinished:

*** 1) Изменения 2) Бэнды

*** 3) TrackView change while playing

*** 4) config (+ make possible only notes)

*** 5) QFile для QML dialog \ save (возможность внешнего сохранения)

*** 6) tunings как диалог, (изменения)

*** 7) Configuration Bar view with all constatns (нумерация, nom\denum, репризы, пробелы - всё опции учесть) - отображать сразу 2-3 бара

**** 8) 1-5 JSON pannels

**** 9) Chords


------------------------------------

Crazy optionals:


    1) ath component with chats

    2) statistics for each track, or whole thing, or directory

    3) polyR mode, different bars (+TrackView)

    4) Macross recording

    5) All undo records in file

    6) JSON file format

    7) simple copy track harmonization + interval : a) cents b) music interval in scale

    8) realtime PCM generation from midi : { player time, recorder time }

    9) midi input

======================================================================










===============================================================================================================================================
(QML models requests:
    instuments + percussions)

z) PDF экспорт
 : https://forum.qt.io/topic/68805/combine-multiple-images-into-a-single-pdf/8

File dialog:
https://stackoverflow.com/questions/62554336/qml-filedialog-path-in-android?rq=1


--------------------------------------------------------------------------------

9) Висячая нота

12) Не сработало ch в paper solders (конец, мой любимый риф)

13) Попытка сыграть с последнего такта сместила курсор

flower) вероятно изменение темпа идёт не за 1 шаг, отсюда расхождение в анимации (проверить на tux+)

28) 53 так съехало ровно на 1 такт, вроде это альтовка

31) Съехала анимация относительно звука

44) Рассинхрон около 20 такта, и потом отдельный около 56

48) Небольшое смещение в конце, я предполагаю что проблема в том что анимация может немного страдать от используемой модели sleep не лучшее решение
Было бы хорошо на контрольных точках осуществлять ресинхронизацию со звуком и восстанавливать визуальный курсор по времени воспроизведения

+ Model size of -111 is less than 0 (tap?)

TO use file dialog parse it 'raw%3A %2F storage %2F emulated %2F 0 %2F Download %2F x %2F q.wav'
(QFile, "://com.android.providers.downloads.documents/document/raw%3A%2Fstorage%2Femulated%2F0%2FDownload%2Fx%2Fq.wav"): device not open

End of QByteArray - AudioOutput


------------------------------------------------------------------------------------------
Поиск ритмических границ:

Использование stft или constant-Q:

Нужно использовать маленький шаг, 64 или 128 сэмплов, что соответствует 1.25 или 2.5 мс
Нужно использовать небольшой фрагмент аудиот 256 до 1024 сэмплов, что соответствует от 5 до 23.2 мс
Несколько экспериментов для проверки, но скорее всего лучше использовать окно заполненное нулями
Возможно следует использовать соотношение 1 к 2, но нужны эксперименты
Нужно попробовать заполнять нулями не только конец, но и размещать звук посередине

После этого нужно находить эпизоды паузы, all notes off, во многих случаях они обязанны быть,
И гарантированно будут наблюдаться при хлопках

Однако в случае неудачи нужно находить другой паттерн: общее возникновение частот + затухание верхних частот
Тогда концом ноты может быть повторное возникновение новых высоких частот

Так или иначе нужно делать трекинг каждой корзины и сохранять дистанции ненулевых амплитуд (или выше порога)

В худшем случае надо делать общий трекинг, сохраняя наличие ненулевых (или границы) на всем диапазоне

Возможно будут сложности с локализацией во времени, тк текущий вариант съехавший - нужно перепроверить это, и попробовать вначале исправить текущий вариант



------------------------------------------------------------------------------------
1) Piano roll + notes
    a) Midi
    b) Music XML
    c) Adjust bpm - не просто изменять, а адаптировать к новому, сохранив максимально звучание


--------------------------------------
CI + UI studio
----------------------------------------------------------------------------------------

1) Выделение библиотек в отдельный проект (статическая библиотека)
2) Вероятно выделение midi\tab поддиректорий в отдельный проект (статическая библиотека)
    (автотесты регрессии)

3) Перенос плейлистов в UI


==========================================================================================================
1) Отображение волны как просто набора сэмплов (переключение между режимом RMS или наложение другим цветом)
    a) Переключение режимов
    b) Zoom - как минимум *4 *2 *1 *1/2

2) Идея многоуровневого алгоритма поиска начала и конца сигнального элемента:
    a) Находить уровни гладкости RMS пока шероховатость не начнёт падать
    b) Находить рост за небольшое расстояние

    + Скользящее среднее

3) Cepstrum calculation, Qml page\component

4) Вкладки по типу athenum - возможность просмотра сразу нескольких одинаковых окон


X) Massive refactoring
    1) Sepparating all features from WaveShape\WaveContour\Spectrogram\ACgraph
    2) Common QML component for wave + something
    3) All libs as sepparated static library :
    https://stackoverflow.com/questions/10034825/how-do-i-build-a-static-library-and-executable-with-qt
    4) Spectrum, ACF, Ceptrum etc as QML component so we can make single page with all types

_____________________________________________________________________
Следующие шаги:
-----------------------------------------------------------------------

    1) Подвижные начало и конец определенной ноты, пороги громкости для удаления лишних пиков

    2) Нахождение частоты по заданному диапазону: скользящее окно yin \ fft \ yinPP

    3) Генерация миди

------------------------------------------------------------------------------
Компоненты и фитчи для удобства редактирования:

    1) Pattern Input для записи хлопков или настукивания
        : визуальное представление настукивания

    2) Piano roll для отображения Midi

    3) Редактирование Audio - вырезать, удалить, скопировать, вставить, отменить

______________________________________________________________________

------------------------------------------------------------
-------------------------------------------------------------
Отложенное:

Полифония\аккорды:

    1) eSACF 1, 2
        1:
        a) Warped linear prediction ?

        b1) highpass
        b2) half wave reclifier : clip 0 - 1
        b3) low pass 1k

        c) low pass 1k

        d) b + c into SACF:
            1) FFT like ACF + sum both into one
            2) pow 0.67 not 2
            3) IFFT
            4) Take real part (half of it)

        e) enchanged acf

            0) in the cycle from 2 to n_peaks = timescale
                1) clip to positive values
                2) timestretch to timescale ?
                3) substruct from original clipped signal
                4) clip again

            0:) So from original signal multiple times substructed different timestretched values + clipped


    2) primeF0 chord method

    3) Harmonic product spectrum

    4) Chromagramm / chroma feature class claculation


Воспроизведение:

    1) Проигрывание налету (генерация аудио в момент запроса от системы MidiSpeaker)

    2) Проигрывание из памяти (без сохранения на физический носитель)
------------------------------------------------------------------

Восстановление Qt-Android дебагера на свежей linux системе:
https://felgo.com/developers/forums/t/qtcreator-android-debugger

----------------------------

iOs:

https://stackoverflow.com/questions/35068054/does-app-store-accept-qt-app-linked-with-qt-library-lgplv3

https://news.ycombinator.com/item?id=4302517

https://marketplace.qt.io/products/qt-lgpl-app-template
https://github.com/dianiux-innova/qtlgplapptemplateExamples
